[{"/Users/chen2886/Desktop/BM8-Front/src/reportWebVitals.js":"1","/Users/chen2886/Desktop/BM8-Front/src/App.js":"2","/Users/chen2886/Desktop/BM8-Front/src/index.js":"3","/Users/chen2886/Desktop/BM8-Front/src/Header.js":"4","/Users/chen2886/Desktop/BM8-Front/src/LocationForm.js":"5","/Users/chen2886/Desktop/BM8-Front/src/Alert.js":"6","/Users/chen2886/Desktop/BM8-Front/src/am4chartMap/am4chartMap.js":"7","/Users/chen2886/Desktop/BM8-Front/src/am4chartMap/mock.js":"8","/Users/chen2886/Desktop/BM8-Front/src/PreferenceForm.js":"9"},{"size":362,"mtime":1611421353875,"results":"10","hashOfConfig":"11"},{"size":6250,"mtime":1611438145423,"results":"12","hashOfConfig":"11"},{"size":478,"mtime":1611421353875,"results":"13","hashOfConfig":"11"},{"size":2065,"mtime":1611426722282,"results":"14","hashOfConfig":"11"},{"size":5402,"mtime":1611438003267,"results":"15","hashOfConfig":"11"},{"size":180,"mtime":1611429770752,"results":"16","hashOfConfig":"11"},{"size":3552,"mtime":1611436047191,"results":"17","hashOfConfig":"11"},{"size":1188,"mtime":1611432505163,"results":"18","hashOfConfig":"11"},{"size":682,"mtime":1611439730708,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1c4dxom",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chen2886/Desktop/BM8-Front/src/reportWebVitals.js",[],["44","45"],"/Users/chen2886/Desktop/BM8-Front/src/App.js",["46","47"],"import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport LocationForm from './LocationForm';\nimport PreferenceForm from './PreferenceForm';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from './Alert.js';\nimport axios from 'axios';\n// import AddressForm from './AddressForm';\n// import PaymentForm from './PaymentForm';\n// import Review from './Review';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"'Montserrat', sans-serif\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  locationCard: {\n    display: 'flex',\n  },\n  locationCardDetails: {\n    flex: 1,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [location, setLocation] = React.useState('');\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState('');\n  const [alertSeverity, setAlertSeverity] = React.useState('error');\n  const steps = ['Your current location', 'Preference', 'Result'];\n\n  const handleNext = async () => {\n    if (activeStep == 0) {\n      console.log(location);\n      if (await validateLocation(location)) {\n        setActiveStep(activeStep + 1);\n      }\n    } else {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setAlertOpen(false);\n  };\n\n  const validateLocation = async (location) => {\n    var config = {\n      method: 'get',\n      url: 'https://api.radar.io/v1/geocode/forward',\n      headers: {\n        Authorization: 'prj_live_pk_f205329de6eaf95633f3b87575b2ef9ddf0ac0a4',\n      },\n      params: { query: location },\n    };\n    var res = await axios(config);\n    var data = res.data.addresses[0];\n    if (data.countryCode !== 'US') {\n      setAlertMessage('We currently only support US!');\n      setAlertSeverity('error');\n      setAlertOpen(true);\n      return false;\n    } else {\n      return true;\n    }\n    // TODO: send to backend\n  };\n\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return <LocationForm setLocation={setLocation}></LocationForm>;\n      case 1:\n        return <PreferenceForm></PreferenceForm>;\n      case 2:\n      // return <Review />;\n      default:\n      // throw new Error('Unknown step');\n    }\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Snackbar open={alertOpen} autoHideDuration={6000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n        <Alert onClose={handleAlertClose} severity={alertSeverity}>\n          {alertMessage}\n        </Alert>\n      </Snackbar>\n      <React.Fragment>\n        <CssBaseline />\n        <Header />\n        <Container maxWidth='lg' style={{ marginTop: '3rem' }}>\n          {/* Stepper */}\n          <main className={classes.layout}>\n            <Paper className={classes.paper}>\n              <Typography component='h1' variant='h4' align='center' style={{ marginTop: '1rem' }}>\n                Find Your Next Dream Location\n              </Typography>\n              <Stepper activeStep={activeStep} className={classes.stepper} alternativeLabel>\n                {steps.map((label) => (\n                  <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n              <React.Fragment>\n                {activeStep === steps.length ? (\n                  <React.Fragment>\n                    <Typography variant='h5' gutterBottom>\n                      Thank you!\n                    </Typography>\n                    <Typography variant='subtitle1'>We hope you liked your results!</Typography>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    {getStepContent(activeStep)}\n                    <div className={classes.buttons}>\n                      {activeStep !== 0 && (\n                        <Button onClick={handleBack} className={classes.button}>\n                          Back\n                        </Button>\n                      )}\n                      <Button variant='contained' color='primary' onClick={handleNext} className={classes.button}>\n                        {activeStep === steps.length - 1 ? 'Done' : 'Next'}\n                      </Button>\n                    </div>\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </Paper>\n          </main>\n        </Container>\n      </React.Fragment>\n    </MuiThemeProvider>\n  );\n}\n","/Users/chen2886/Desktop/BM8-Front/src/index.js",[],"/Users/chen2886/Desktop/BM8-Front/src/Header.js",[],"/Users/chen2886/Desktop/BM8-Front/src/LocationForm.js",["48","49","50"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\nimport { Grid } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from './Alert.js';\nimport Map from './am4chartMap/am4chartMap';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '2rem',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function InputAdornments(props) {\n  const classes = useStyles();\n  const [location, setLocation] = React.useState('');\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState('');\n  const [alertSeverity, setAlertSeverity] = React.useState('error');\n  const [open, setOpen] = React.useState(false);\n\n  const [finalCityData, setFinalCityData] = React.useState();\n  const [citySet, setCitySet] = React.useState(false);\n\n  const handleChange = (e) => {\n    setLocation(e.target.value);\n    props.setLocation(e.target.value);\n  };\n\n  console.log(props);\n\n  const handleClickLocation = () => {\n    if (navigator.geolocation) {\n      setOpen(true);\n      setTimeout(function () {\n        if (open) {\n          setOpen(false);\n          setAlertMessage('Can not get your location, try entering manually as City, State');\n          setAlertSeverity('error');\n          setAlertOpen(true);\n        } else {\n          return;\n        }\n      }, 10000);\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          let lat = parseFloat(position.coords.latitude);\n          let long = parseFloat(position.coords.longitude);\n          console.log('Latitude is :', position.coords.latitude);\n          console.log('Longitude is :', position.coords.longitude);\n          axios\n            .get(`https://api.radar.io/v1/geocode/reverse?coordinates=${lat},${long}`, {\n              headers: {\n                Authorization: `prj_live_pk_f205329de6eaf95633f3b87575b2ef9ddf0ac0a4`,\n              },\n            })\n            .then(function (res) {\n              // TODO: send to backend\n              var data = res.data.addresses[0];\n              console.log(data);\n              setLocation(data.city + ', ' + data.stateCode);\n              props.setLocation(data.city + ', ' + data.stateCode);\n              setOpen(false);\n              if (data.countryCode !== 'US') {\n                setAlertMessage('We currently only support US!');\n                setAlertSeverity('error');\n                setAlertOpen(true);\n                return;\n              } else {\n                setFinalCityData({\n                  latitude: data.latitude,\n                  longitude: data.longitude,\n                  size: 10,\n                  tooltip: data.city + ', ' + data.stateCode,\n                });\n                setCitySet(true);\n              }\n            });\n        },\n        function () {\n          console.log('error in locating');\n        }\n      );\n    } else {\n      console.log('Geolocation not available.');\n      setAlertMessage('Geolocation is not available, try manual typing.');\n      setAlertSeverity('error');\n      setAlertOpen(true);\n    }\n  };\n\n  const handleMouseDownLocation = (event) => {\n    event.preventDefault();\n  };\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setAlertOpen(false);\n  };\n\n  return (\n    <>\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n      <Snackbar open={alertOpen} autoHideDuration={6000} onClose={handleAlertClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n        <Alert onClose={handleAlertClose} severity={alertSeverity}>\n          {alertMessage}\n        </Alert>\n      </Snackbar>\n      <Grid container justify='center'>\n        <Grid item md={8}>\n          <div className={classes.root}>\n            <FormControl fullWidth className={clsx(classes.margin)}>\n              <InputLabel htmlFor='standard-adornment-password'>Enter city and state, or use current location</InputLabel>\n              <Input\n                id='standard-adornment-password'\n                type='text'\n                value={location}\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position='end'>\n                    <IconButton aria-label='toggle password visibility' onClick={handleClickLocation} onMouseDown={handleMouseDownLocation}>\n                      <LocationSearchingIcon></LocationSearchingIcon>\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/chen2886/Desktop/BM8-Front/src/Alert.js",[],"/Users/chen2886/Desktop/BM8-Front/src/am4chartMap/am4chartMap.js",["51"],"import React, { Component } from 'react';\n\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_usaHigh from '@amcharts/amcharts4-geodata/usaHigh';\n\nimport AnimateNumber from 'react-animated-number';\nimport s from './am4chartMap.module.scss';\n\nclass Am4chartMap extends Component {\n\n  componentDidMount() {\n    console.log(this.props);\n    let map = am4core.create('map', am4maps.MapChart);\n    map.geodata = am4geodata_usaHigh;\n    map.percentHeight = 90;\n    map.dy = 10;\n    map.projection = new am4maps.projections.AlbersUsa();\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.useGeodata = true;\n    map.homeZoomLevel = 1.1;\n    map.chartContainer.wheelable = false;\n    // map.zoomControl = new am4maps.ZoomControl();\n    // map.zoomControl.layout = 'horizontal';\n    // map.zoomControl.align = 'left';\n    // map.zoomControl.valign = 'bottom';\n    // map.zoomControl.dy = -10;\n    // map.zoomControl.contentHeight = 20;\n    // map.zoomControl.minusButton.background.fill = am4core.color(\"#C7D0FF\");\n    // map.zoomControl.minusButton.background.stroke = am4core.color(\"#6979C9\");\n    // map.zoomControl.minusButton.label.fontWeight = 600;\n    // map.zoomControl.minusButton.label.fontSize = 22;\n    // map.zoomControl.minusButton.scale = .75;\n    // map.zoomControl.minusButton.label.scale = .75;\n    // map.zoomControl.plusButton.background.fill = am4core.color(\"#C7D0FF\");\n    // map.zoomControl.plusButton.background.stroke = am4core.color(\"#6979C9\");\n    // map.zoomControl.plusButton.label.fontWeight = 600;\n    // map.zoomControl.plusButton.label.fontSize = 22;\n    // map.zoomControl.plusButton.label.align = \"center\";\n    // map.zoomControl.plusButton.scale = .75;\n    // map.zoomControl.plusButton.label.scale = .75;\n    // map.zoomControl.plusButton.dx = 5;\n    // let plusButtonHoverState = map.zoomControl.plusButton.background.states.create(\"hover\");\n    // plusButtonHoverState.properties.fill = am4core.color(\"#354D84\");\n    // let minusButtonHoverState = map.zoomControl.minusButton.background.states.create(\"hover\");\n    // minusButtonHoverState.properties.fill = am4core.color(\"#354D84\");\n    let polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = '{name}';\n    polygonTemplate.fill = am4core.color('#474D84');\n    polygonTemplate.stroke = am4core.color('#6979C9');\n    let hs = polygonTemplate.states.create('hover');\n    hs.properties.fill = am4core.color('#354D84');\n    let citySeries = map.series.push(new am4maps.MapImageSeries());\n    citySeries.data = this.props.cities;\n    citySeries.dataFields.value = 'size';\n    let city = citySeries.mapImages.template;\n    city.nonScaling = true;\n    city.propertyFields.latitude = 'latitude';\n    city.propertyFields.longitude = 'longitude';\n    let circle = city.createChild(am4core.Circle);\n    circle.fill = am4core.color('#C7D0FF');\n    circle.strokeWidth = 0;\n    let circleHoverState = circle.states.create('hover');\n    circleHoverState.properties.strokeWidth = 1;\n    circle.tooltipText = '{tooltip}';\n    circle.propertyFields.radius = 'size';\n    this.map = map;\n  }\n\n  componentWillUnmount() {\n    if (this.map) {\n      this.map.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div className={s.mapChart}>\n        <div className={s.stats}></div>\n        <div className={s.map} id='map'>\n          <span>Alternative content for the map</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Am4chartMap;\n","/Users/chen2886/Desktop/BM8-Front/src/am4chartMap/mock.js",["52"],"export default [\n  {\n    latitude: 40.717079,\n    longitude: -74.00116,\n    size: 6,\n    tooltip: 'New York',\n    fill: \"#F00\"\n  },\n  {\n    latitude: 33.145235,\n    longitude: -83.811834,\n    size: 7,\n    tooltip: 'Oconee National Forest',\n  },\n  {\n    latitude: 37.792032,\n    longitude: -122.394613,\n    size: 4,\n    tooltip: 'San Francisco',\n  },\n  {\n    latitude: 26.935080,\n    longitude: -80.851766,\n    size: 9,\n    tooltip: 'Lake Okeechobee',\n  },\n  {\n    latitude: 36.331308,\n    longitude: -83.336050,\n    size: 4,\n    tooltip: 'Grainger County',\n  },\n  {\n    latitude: 36.269356,\n    longitude: -76.587477,\n    size: 8,\n    tooltip: 'Chowan County',\n  },\n  {\n    latitude: 30.700644,\n    longitude: -95.145249,\n    size: 6,\n    tooltip: 'Lake Livingston',\n  },\n  {\n    latitude: 34.546708,\n    longitude: -90.211471,\n    size: 5,\n    tooltip: 'Tunica County',\n  },\n  {\n    latitude: 32.628599,\n    longitude: -103.675115,\n    size: 5,\n    tooltip: 'Lea County',\n  },\n  {\n    latitude: 40.456692,\n    longitude: -83.522688,\n    size: 5,\n    tooltip: 'Union County',\n  },\n  {\n    latitude: 33.844630,\n    longitude: -118.157483,\n    size: 6,\n    tooltip: 'Lakewood Mutual',\n  }\n]",["53","54"],"/Users/chen2886/Desktop/BM8-Front/src/PreferenceForm.js",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":100,"column":20,"nodeType":"64","messageId":"65","endLine":100,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":149,"column":7,"nodeType":"68","messageId":"69","endLine":149,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":15,"column":8,"nodeType":"72","messageId":"73","endLine":15,"endColumn":11},{"ruleId":"70","severity":1,"message":"74","line":44,"column":10,"nodeType":"72","messageId":"73","endLine":44,"endColumn":23},{"ruleId":"70","severity":1,"message":"75","line":45,"column":10,"nodeType":"72","messageId":"73","endLine":45,"endColumn":17},{"ruleId":"70","severity":1,"message":"76","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","endLine":69,"endColumn":2},{"ruleId":"58","replacedBy":"80"},{"ruleId":"60","replacedBy":"81"},{"ruleId":"70","severity":1,"message":"82","line":24,"column":9,"nodeType":"72","messageId":"73","endLine":24,"endColumn":16},{"ruleId":"70","severity":1,"message":"83","line":25,"column":10,"nodeType":"72","messageId":"73","endLine":25,"endColumn":15},{"ruleId":"70","severity":1,"message":"84","line":25,"column":17,"nodeType":"72","messageId":"73","endLine":25,"endColumn":25},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'finalCityData' is assigned a value but never used.","'citySet' is assigned a value but never used.","'AnimateNumber' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["85"],["86"],"'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]